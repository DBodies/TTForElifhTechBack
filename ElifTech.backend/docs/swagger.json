{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Flower app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of flower app"
  },
  "servers": [
    {
      "url": "http://localhost:4561"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Flower",
      "description": "Flowers delivery."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/shops/shops": {
      "get": {
        "summary": "Get all shops",
        "operationId": "getAllShops",
        "description": "Returns a list of shops. You can filter by name if query param is provided.",
        "tags": [
          "Flower"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Filter shops by name"
          }
        ],
        "responses": {
          "200": {
            "description": "List of shops",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Shops not found"
          }
        }
      }
    },
    "/shops/shops/{id}": {
      "get": {
        "summary": "Get shop by ID",
        "operationId": "getShopById",
        "description": "Returns details of a single shop by its unique identifier.",
        "tags": [
          "Flower"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the shop"
          }
        ],
        "responses": {
          "200": {
            "description": "Shop details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              }
            }
          },
          "404": {
            "description": "Shop not found"
          }
        }
      }
    },
    "/shops/shops/{shopId}/flowers": {
      "get": {
        "summary": "Get flowers by shop",
        "operationId": "getFlowersByShop",
        "description": "Returns a list of flowers available in a specific shop by its unique identifier.",
        "tags": [
          "Flower"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the shop"
          }
        ],
        "responses": {
          "200": {
            "description": "List of flowers in the shop",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/flower"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Shop not found"
          }
        }
      }
    },
    "/shops/orders/{orderId}": {
      "get": {
        "summary": "Get your order",
        "operationId": "getOrder",
        "description": "Get client order by its unique identifier and let them check it",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the order"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orders"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Registers a new user and returns their details",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/register"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials or validation error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Shop": {
        "type": "object",
        "required": [
          "name",
          "email",
          "phone",
          "address"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Shop id",
            "example": "68bdc1621bda5a0e7af73d1a"
          },
          "name": {
            "type": "string",
            "description": "Shop name",
            "example": "Bloom Flowers"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Shop email",
            "example": "bloom@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Shop phone",
            "pattern": "^\\+380\\d{9}$",
            "example": "+380991112233"
          },
          "address": {
            "type": "string",
            "description": "Shop address",
            "example": "Kyiv, Khreshchatyk 15"
          }
        }
      },
      "flower": {
        "type": "object",
        "required": [
          "name",
          "price",
          "dataAdded"
        ],
        "properties": {
          "shopId": {
            "type": "string",
            "description": "shop identifier",
            "example": "68bdc1621bda5a0e7af73d1a"
          },
          "name": {
            "type": "string",
            "description": "flower name",
            "example": "Rose"
          },
          "description": {
            "type": "string",
            "example": "Amazing spring roses"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Flower price",
            "example": 1000
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri",
              "example": "https://example.com/rose.png"
            }
          },
          "dataAdded": {
            "type": "string",
            "format": "date",
            "description": "Date when flower was added",
            "example": "2000-10-10"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "available": {
            "type": "boolean"
          }
        }
      },
      "orders": {
        "type": "object",
        "required": [
          "orderId",
          "userId",
          "flowerId",
          "quantity",
          "priceAtOrder",
          "totalPrice",
          "email",
          "phone",
          "deliveryAddress",
          "clientTimezone"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "_id",
            "example": "68c01855fb456e5d96dd934b"
          },
          "orderId": {
            "type": "string",
            "description": "Your order id",
            "example": "e4d3de19-a86c-48d3-99a6-484206f8c979"
          },
          "userId": {
            "type": "string",
            "description": "Your user id",
            "example": "64bcd1234567abc987654321",
            "items": {
              "type": "object",
              "properties": {
                "flowerId": {
                  "type": "string",
                  "description": "Flower id",
                  "example": "68bdc1621bda5a0e7af73d20"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Items quantity",
                  "example": 2
                },
                "priceAtOrder": {
                  "type": "number",
                  "format": "float",
                  "description": "Price per item at order time",
                  "example": 1000
                }
              }
            }
          },
          "totalPrice": {
            "type": "string",
            "description": "Your order's price",
            "example": 1000
          },
          "name": {
            "type": "string",
            "description": "Your name",
            "example": "Denis"
          },
          "email": {
            "type": "string",
            "description": "Your email",
            "example": "example@gmail.com"
          },
          "phone": {
            "type": "string",
            "description": "your phone number",
            "example": "+380564654561"
          },
          "deliveryAddress": {
            "type": "string",
            "description": "Your delivery address",
            "example": "Kyiv, Khreshchatyk 10"
          },
          "clientTimezone": {
            "type": "string",
            "description": "Your timezone",
            "example": "Europe/Kyiv"
          },
          "status": {
            "type": "string",
            "description": "Status of the order",
            "enum": [
              "pending",
              "paid",
              "delivered",
              "cancelled"
            ],
            "example": "pending"
          }
        }
      },
      "register": {
        "type": "object",
        "required": [
          "name",
          "password",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "your name",
            "example": "Denis"
          },
          "password": {
            "type": "string",
            "description": "Create a strong password"
          },
          "email": {
            "type": "string",
            "description": "Enter your email address",
            "example": "example@gmail.com"
          },
          "favorites": {
            "type": "boolean",
            "description": "Choose your favorites flower"
          }
        }
      },
      "login": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "Email which you entered",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "password which you entered"
          }
        }
      }
    }
  }
}